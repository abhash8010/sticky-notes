{"version":3,"sources":["Components/Note.js","Components/AddNote.js","Components/NotesList.js","Components/SearchBar.js","App.js","index.js"],"names":["Note","id","text","date","deleteNote","console","log","className","size","onClick","AddNote","addNote","useState","noteTxt","setNoteTxt","rows","cols","placeholder","onChange","e","target","value","length","trim","alert","noteslist","note","map","SearchBar","setSearchTxt","type","App","nanoid","setNote","useEffect","localNotes","JSON","parse","localStorage","getItem","setItem","stringify","searchTxt","NotesList","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAeeA,MAbf,YAA4C,IAA7BC,EAA4B,EAA5BA,GAAIC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,WAE1B,OADAC,QAAQC,IAAIL,GAER,sBAAKM,UAAU,OAAf,UACI,8BAAML,IACN,sBAAKK,UAAU,OAAf,UACI,gCAAQJ,IACR,cAAC,IAAD,CAAiBI,UAAU,gBAAgBC,KAAK,QAAQC,QAAS,kBAAKL,EAAWH,aCqBlFS,MA5Bf,YAA6B,IAAXC,EAAU,EAAVA,QAAU,EACMC,mBAAS,IADf,mBACjBC,EADiB,KACRC,EADQ,KAiBxB,OACI,sBAAKP,UAAU,kBAAf,UACI,0BAAUQ,KAAK,IAAIC,KAAK,KAAKC,YAAY,6BAA6BC,SAhBzD,SAACC,GADN,IAECA,EAAEC,OAAOC,MAAMC,QAAU,GACtCR,EAAWK,EAAEC,OAAOC,QAc8EA,MAAOR,IACrG,sBAAKN,UAAU,OAAf,UACI,kCAnBI,IAmBcM,EAAQS,OAA1B,gBACA,wBAAQf,UAAU,UAAUE,QAdhB,WACjBI,EAAQU,OAAOD,OAAS,GAC3BX,EAAQE,GACRC,EAAW,MAEPA,EAAW,IACXU,MAAM,gCAQF,wBCVDC,MAXf,YAAiD,IAA7BC,EAA4B,EAA5BA,KAAMf,EAAsB,EAAtBA,QAASP,EAAa,EAAbA,WAC/B,OACI,sBAAKG,UAAU,YAAf,UACImB,EAAKC,KAAI,SAACD,GAAD,OACL,cAAC,EAAD,CAAMzB,GAAIyB,EAAKzB,GAAIC,KAAMwB,EAAKxB,KAAMC,KAAMuB,EAAKvB,KAAMC,WAAYA,OAEtE,cAAC,EAAD,CAASO,QAASA,Q,OCGdiB,MATf,YAAoC,IAAhBC,EAAe,EAAfA,aAChB,OACI,sBAAKtB,UAAU,aAAf,UACG,cAAC,IAAD,CAAUA,UAAU,cAAcC,KAAK,UACvC,uBAAOsB,KAAK,OAAOb,YAAY,iBAAiBC,SAAU,SAACC,GAAKU,EAAaV,EAAEC,OAAOC,cCkDlFU,MAnDf,WAAgB,IAAD,EACWnB,mBAAS,CAAC,CAChCX,GAAI+B,cACJ9B,KAAM,oBACNC,KAAM,cACN,CACEF,GAAI+B,cACJ9B,KAAM,qBACNC,KAAM,cACN,CACEF,GAAI+B,cACJ9B,KAAM,oBACNC,KAAM,cACN,CACEF,GAAI+B,cACJ9B,KAAM,qBACNC,KAAM,gBAhBD,mBACNuB,EADM,KACAO,EADA,KAkBfC,qBAAU,WACT,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,aAChDJ,GACAF,EAAQE,KAET,IACHD,qBAAU,WACRI,aAAaE,QAAQ,WAAYJ,KAAKK,UAAUf,MAChD,CAACA,IAED,IA5Ba,EA0CqBd,mBAAS,IA1C9B,mBA0CN8B,EA1CM,KA0CKb,EA1CL,KA2Cb,OACE,sBAAKtB,UAAU,iBAAf,UACE,cAAC,EAAD,CAAWsB,aAAcA,IACzB,cAACc,EAAD,CAAWjB,KAAMA,EAAKkB,QAAO,SAAClB,GAAD,OAAQA,EAAKxB,KAAK2C,cAAcC,SAASJ,EAAUG,kBAAiBlC,QAlBrF,SAACT,GACf,IAAMC,EAAO,IAAI4C,KACXC,EAAU,CACd/C,GAAI+B,cACJ9B,KAAMA,EACNC,KAAMA,EAAK8C,sBAEPC,EAAQ,sBAAOxB,GAAP,CAAasB,IAC3Bf,EAAQiB,IAU6G9C,WARpG,SAACH,GAClB,IAAM+C,EAAUtB,EAAKkB,QAAO,SAAClB,GAAD,OAAUA,EAAKzB,KAAOA,KAClDgC,EAAQe,UCzCZG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.22049937.chunk.js","sourcesContent":["import React from 'react'\nimport {MdDeleteForever} from 'react-icons/md'\nfunction Note({id, text, date,deleteNote}) {\n    console.log(id)\n    return (\n        <div className=\"note\">\n            <div>{text}</div>\n            <div className=\"foot\">\n                <small>{date}</small>\n                <MdDeleteForever className=\"delete-button\" size=\"1.3em\" onClick={()=> deleteNote(id)}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Note\n","import React,{useState} from 'react'\n\nfunction AddNote({addNote}) {\n    const [noteTxt, setNoteTxt] = useState('');\n    const charLim = 200;\n    const handleChange = (e) =>{\n        if(charLim - e.target.value.length >= 0){\n        setNoteTxt(e.target.value)\n        }\n    }\n    const handleSaveClick = () => {\n        if(noteTxt.trim().length > 0){\n        addNote(noteTxt);\n        setNoteTxt(\"\")\n        }else{\n            setNoteTxt(\"\")\n            alert('The notes cannot be empty!')\n        }\n    }\n    return (\n        <div className=\"note-adder note\">\n            <textarea rows=\"8\" cols=\"10\" placeholder=\"Type your new note here...\" onChange={handleChange} value={noteTxt}/>\n            <div className=\"foot\">\n                <small>{charLim - noteTxt.length} remaining</small>\n                <button className=\"add-btn\" onClick={handleSaveClick}>Add</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AddNote\n","import React from 'react'\nimport Note from './Note'\nimport AddNote from './AddNote'\nfunction noteslist({note, addNote, deleteNote}) {\n    return (\n        <div className=\"note-list\">\n           {note.map((note) => (\n                <Note id={note.id} text={note.text} date={note.date} deleteNote={deleteNote}/>\n           ))}\n           <AddNote addNote={addNote}/>\n        </div>\n    )\n}\n\nexport default noteslist\n","import React from 'react'\nimport { MdSearch } from 'react-icons/md'\n\nfunction SearchBar({setSearchTxt}) {\n    return (\n        <div className=\"search-bar\">\n           <MdSearch className=\"search-icon\" size=\"1.3em\"/> \n           <input type=\"text\" placeholder=\"Type to search\" onChange={(e)=>{setSearchTxt(e.target.value)}}></input>\n        </div>\n    )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport NotesList from './Components/NotesList'\nimport {useState, useEffect} from 'react';\nimport {nanoid} from 'nanoid'; \nimport SearchBar from './Components/SearchBar';\n\nfunction App() {  \n  const [note, setNote] = useState([{\n    id: nanoid(),\n    text: \"This is the first\",\n    date: \"12/09/2020\"},\n    {\n      id: nanoid(),\n      text: \"This is the Second\",\n      date: \"12/09/2020\"},\n      { \n        id: nanoid(),\n        text: \"This is the Third\",\n        date: \"12/09/2020\"},\n        {\n          id: nanoid(),\n          text: \"This is the Fourth\",\n          date: \"12/09/2020\"},\n  ])\nuseEffect(()=>{\n const localNotes = JSON.parse(localStorage.getItem('note-app'));\n if(localNotes){\n    setNote(localNotes)\n }\n}, [])\nuseEffect(()=>{\n  localStorage.setItem('note-app', JSON.stringify(note))\n},[note])\n\n  const addNote = (text) =>{\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n    const newNotes = [...note, newNote]\n    setNote(newNotes)\n  }\n  const deleteNote = (id) =>{\n    const newNote = note.filter((note) => note.id !== id)\n    setNote(newNote)\n  }\n  const [searchTxt, setSearchTxt] = useState('');\n  return (\n    <div className=\"main-container\">\n      <SearchBar setSearchTxt={setSearchTxt}/>\n      <NotesList note={note.filter((note)=>note.text.toLowerCase().includes(searchTxt.toLowerCase()))} addNote={addNote} deleteNote={deleteNote}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}